%%{
/*
 * Copyright (c) 2019 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

/*
 *  ======== ti_wisunfan_features.h.xdt ========
 */

const inst = system.modules["/ti/ti_wisunfan/ti_wisunfan"].$static;

function getModeFeatureMacro(mode) {
    switch(mode) {
        case "beacon":
            return "FEATURE_BEACON_MODE";
        case "nonBeacon":
            return "FEATURE_NON_BEACON_MODE";
        case "frequencyHopping":
            return "FEATURE_FREQ_HOP_MODE";
        case "fixedChannel":
            return "FEATURE_FREQ_HOP_MODE";
        default:
            throw new Error("Unhanded mode: " + mode);
    }
}
%%}
/******************************************************************************
 DO NOT EDIT - This file is generated by the SysConfig tool.
 @file ti_154stack_features.h

 @brief TI-15.4 Stack feature parameters definitions for `inst.project` applications

 *****************************************************************************/
#ifndef TI_154STACK_FEATURES_H
#define TI_154STACK_FEATURES_H

#ifdef __cplusplus
extern "C"
{
#endif

% const isSecureEnabled = (inst.secureLevel !== "macSecureDisabled");

% if(isSecureEnabled) {
/* Builds the image with the mac layer security turned on */
#define FEATURE_MAC_SECURITY
%}
%else
%{
#define FEATURE_MBED_NO_AUTH    1
%}

/* Builds the image with `inst.mode` mode of operation */
#define `getModeFeatureMacro(inst.mode)`

% if(inst.project.includes("borderrouter")) {
/*! Builds the image with the full function device */
#define FEATURE_FULL_FUNCTION_DEVICE
% }

#ifdef __cplusplus
}
#endif

#endif /* TI_154STACK_FEATURES_H */
