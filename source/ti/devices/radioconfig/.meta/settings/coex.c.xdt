%%{
/*
 * Copyright (c) 2020 Texas Instruments Incorporated - http://www.ti.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * *  Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * *  Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * *  Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
 * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */
 
/*
 *  ======== coex.c.xdt ========
 */
const Common = system.getScript("/ti/devices/radioconfig/radioconfig_common.js");
const CoExConfig = Common.getCoexConfig();
if (CoExConfig === null) {
    return null;
}

let configType;
let protocol;

// Protocol dependant code
if ("cmdIeeeRxConfig" in CoExConfig) {
    configType = "rfc_ieeeCoExConfig_t";
    protocol = "IEEE 802.15.4-2006";
}
else {
    configType = "rfCoreHal_bleCoExConfig_t";
    protocol = "BLE";
}

let code = "";
for (let [key, value] of Object.entries(CoExConfig)) {
    if (typeof value === 'object') {
        for (let [key1, value1] of Object.entries(value)) {
            code += "    ." + key + "." + key1 + " = " + value1 + ",\n";
        }
    }
    else {
        code += "    ." + key + " = " + value + ",\n";
    }
}
code = code.slice(0,-2); // Remove last command and newline
%%}
// *********************************************************************************
//   `protocol`/WiFi Co-Existence configuration
// *********************************************************************************
`configType` coexConfig = 
{
`code`
};
